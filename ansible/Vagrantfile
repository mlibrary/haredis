Vagrant.configure("2") do |config|

  # Create small redis-server
  config.vm.define 'redis_server_1' do |machine|
    machine.vm.hostname = 'redis1'
    machine.vm.box = "debian/jessie64"
    machine.vm.network "private_network", ip: "192.168.90.10"
    machine.vm.provider "virtualbox" do |v|
      v.memory = 512
    end
  end
  
  # Create small redis-sentinel
  config.vm.define 'redis_sentinel_1' do |machine|
    machine.vm.hostname = 'sentinel1'
    machine.vm.box = "debian/jessie64"
    machine.vm.network "private_network", ip: "192.168.90.20"
    machine.vm.provider "virtualbox" do |v|
      v.memory = 512
    end
  end
  
  # Create an HA Proxy machine.
  #   Do provisioning for all hosts in the block of the last vm definition.
  #   This allows ansible to run only once and ensures all the hosts have been provisioned.
  #   It's a hack to do "common provisioning for multi machine setups"
  config.vm.define 'haproxy' do |machine|
    machine.vm.hostname = 'hahaha'
    machine.vm.box = "debian/jessie64"
    machine.vm.network "private_network", ip: "192.168.90.30"
    machine.vm.provider "virtualbox" do |v|
      v.memory = 512
    end
    machine.vm.provision "ansible" do |ansible|
      ansible.limit = "all"
      ansible.verbose = "v"
      ansible.playbook = "vagrant.playbook.yml"
			ansible.groups = {
				"haproxy" => ["haproxy"],
				"sentinels" => ["redis_sentinel_1"],
				"redis_servers" => ["redis_server_1"],
        "redis_servers:vars" => {"master_ip" => "192.168.90.10"}
			}
      ansible.host_vars = {
        "redis_server_1": {"bind_address": "192.168.90.10"}
      }
    end
  end
end
